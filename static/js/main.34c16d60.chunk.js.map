{"version":3,"sources":["TodoItem.js","TodoList.js","App.js","index.js"],"names":["TodoItem","data","taskNum","dispatch","useContext","Context","className","type","checked","completed","onChange","payload","id","defaultValue","value","placeholder","event","target","onClick","TodoList","state","console","log","map","todo","index","React","createContext","reducer","action","Date","now","filter","item","initialState","App","useReducer","useEffect","raw","localStorage","getItem","JSON","parse","setItem","stringify","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uNAGe,SAASA,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACjCC,EAAWC,qBAAWC,GAC5B,OACE,sBAAKC,UAAU,OAAf,UACE,8BACE,uBACEC,KAAK,WACLC,QAASP,EAAKQ,UACdC,SAAU,kBAAMP,EAAS,CAAEI,KAAM,QAASI,QAASV,EAAKW,MACxDN,UAAU,mBAGd,8BACE,uBACEC,KAAK,OACLM,aAAcZ,EAAKa,MACnBC,YAAa,QAAUb,EACvBQ,SAAU,SAACM,GACTb,EAAS,CACPI,KAAM,cACNI,QAAS,CAAEC,GAAIX,EAAKW,GAAIE,MAAOE,EAAMC,OAAOH,UAGhDR,UAAU,iBAId,8BACE,uBACEC,KAAK,SACLW,QAAS,kBAAMf,EAAS,CAAEI,KAAM,SAAUI,QAASV,EAAKW,MACxDN,UAAU,sBChCL,SAASa,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAEjC,OADAC,QAAQC,IAAIF,GACLA,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACf,cAACzB,EAAD,CAAwBE,QAASuB,EAAQ,EAAGxB,KAAMuB,GAAnCA,EAAKZ,O,UCDXP,EAAUqB,IAAMC,gBAE7B,SAASC,EAAQR,EAAOS,GACtB,OAAQA,EAAOtB,MACb,IAAK,QACH,OAAOsB,EAAOlB,QAEhB,IAAK,MACH,MAAM,GAAN,mBAAWS,GAAX,CAAkB,CAAER,GAAIkB,KAAKC,MAAOtB,WAAW,EAAOK,MAAO,MAE/D,IAAK,SACH,OAAOM,EAAMY,QAAO,SAACC,GAAD,OAAUA,EAAKrB,KAAOiB,EAAOlB,WAEnD,IAAK,QACH,OAAOS,EAAMG,KAAI,SAACU,GAChB,OAAIA,EAAKrB,KAAOiB,EAAOlB,QACd,2BAAKsB,GAAZ,IAAkBxB,WAAYwB,EAAKxB,YAE9BwB,KAGX,IAAK,cACH,OAAOb,EAAMG,KAAI,SAACU,GAChB,OAAIA,EAAKrB,KAAOiB,EAAOlB,QAAQC,GACtB,2BAAKqB,GAAZ,IAAkBnB,MAAOe,EAAOlB,QAAQG,QAEnCmB,KAGX,QACE,OAAOb,GAGb,IAAIc,EAAe,CAAC,CAAEtB,GAAIkB,KAAKC,MAAOtB,WAAW,EAAOK,MAAO,KAChD,SAASqB,IACtB,MAA0BC,qBAAWR,EAASM,GAA9C,mBAAOd,EAAP,KAAcjB,EAAd,KAWA,OATAkC,qBAAU,WACR,IAAMC,EAAMC,aAAaC,QAAQ,iBAC7BF,GACFnC,EAAS,CAAEI,KAAM,QAASI,QAAS8B,KAAKC,MAAMJ,OAC/C,IAEHD,qBAAU,WACRE,aAAaI,QAAQ,gBAAiBF,KAAKG,UAAUxB,MACpD,CAACA,IAEF,cAACf,EAAQwC,SAAT,CAAkB/B,MAAOX,EAAzB,SACE,sBAAKG,UAAU,YAAf,UACE,8BACE,8CAEF,8BACE,wBACEA,UAAU,YACVY,QAAS,WACPf,EAAS,CAAEI,KAAM,aAKvB,uBACA,uBACA,qBAAKD,UAAU,gBAAf,SACE,cAACa,EAAD,CAAUC,MAAOA,WC/D3B,IAAM0B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACf,EAAD,MAEFW,K","file":"static/js/main.34c16d60.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { Context } from \"./App\";\r\n\r\nexport default function TodoItem({ data, taskNum }) {\r\n  const dispatch = useContext(Context);\r\n  return (\r\n    <div className=\"todo\">\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={data.completed}\r\n          onChange={() => dispatch({ type: \"check\", payload: data.id })}\r\n          className=\"option-input\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={data.value}\r\n          placeholder={\"task \" + taskNum}\r\n          onChange={(event) => {\r\n            dispatch({\r\n              type: \"changeValue\",\r\n              payload: { id: data.id, value: event.target.value }\r\n            });\r\n          }}\r\n          className=\"text-input\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <input\r\n          type=\"button\"\r\n          onClick={() => dispatch({ type: \"delete\", payload: data.id })}\r\n          className=\"delete-input\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList({ state }) {\r\n  console.log(state)\r\n  return state.map((todo, index) => (\r\n    <TodoItem key={todo.id} taskNum={index + 1} data={todo} />\r\n  ));\r\n}\r\n","import React, { useReducer, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport \"./styles.css\";\n\nexport const Context = React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"reset\":\n      return action.payload;\n\n    case \"add\":\n      return [...state, { id: Date.now(), completed: false, value: \"\" }];\n\n    case \"delete\":\n      return state.filter((item) => item.id !== action.payload);\n\n    case \"check\":\n      return state.map((item) => {\n        if (item.id === action.payload) {\n          return { ...item, completed: !item.completed };\n        }\n        return item;\n      });\n\n    case \"changeValue\":\n      return state.map((item) => {\n        if (item.id === action.payload.id) {\n          return { ...item, value: action.payload.value };\n        }\n        return item;\n      });\n\n    default:\n      return state;\n  }\n}\nlet initialState = [{ id: Date.now(), completed: false, value: \"\" }]\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const raw = localStorage.getItem(\"aryanTodoData\");\n    if (raw)\n      dispatch({ type: \"reset\", payload: JSON.parse(raw) });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"aryanTodoData\", JSON.stringify(state));\n  }, [state]);\n  return (\n    <Context.Provider value={dispatch}>\n      <div className=\"container\">\n        <div>\n          <h1> Todo App </h1>\n        </div>\n        <div>\n          <button\n            className=\"add-input\"\n            onClick={() => {\n              dispatch({ type: \"add\" });\n            }}\n          />\n        </div>\n\n        <br />\n        <br />\n        <div className=\"todoContainer\">\n          <TodoList state={state} />\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}